apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'co.bird.gradle.version'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'

android {
    compileSdk rootProject.compileSdkVersion
    namespace "com.chuckerteam.chucker"

    compileOptions {
        kotlinOptions.freeCompilerArgs += [
            '-module-name', "com.github.ChuckerTeam.Chucker.library",
            "-Xexplicit-api=strict"
        ]
    }

    defaultConfig {
        minSdk rootProject.minSdkVersion
        consumerProguardFiles 'proguard-rules.pro'
        resValue("string", "chucker_version", "$VERSION_NAME")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    buildFeatures {
        viewBinding true
        buildConfig = false
    }

    lintOptions {
        warningsAsErrors true
        abortOnError true
        // We don't want to impose RTL on consuming applications.
        disable 'RtlEnabled'
        // Don't fail build if some dependencies outdated
        disable 'GradleDependency'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            all {
                useJUnitPlatform()
            }
        }
    }

    resourcePrefix 'chucker_'

//    publishing {
//        singleVariant('release') {
//            withSourcesJar()
//            withJavadocJar()
//        }
//    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    implementation "com.google.android.material:material:$materialComponentsVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.palette:palette-ktx:$paletteKtxVersion"

    implementation "androidx.activity:activity-ktx:$activityVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVersion"

    implementation "com.google.code.gson:gson:$gsonVersion"

    implementation "org.brotli:dec:$brotliVersion"

    api platform("com.squareup.okhttp3:okhttp-bom:$okhttpVersion")
    api "com.squareup.okhttp3:okhttp"
    testImplementation "com.squareup.okhttp3:mockwebserver"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "junit:junit:$junit4Version"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "androidx.test:core:$androidxTestCoreVersion"
    testImplementation "androidx.arch.core:core-testing:$androidXCoreVersion"
    testImplementation "com.google.truth:truth:$truthVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"

    androidTestImplementation "junit:junit:$junit4Version"
    androidTestImplementation "androidx.test:runner:$androidXTestRunner"
    androidTestImplementation "androidx.test:rules:$androidXTestRules"
    androidTestImplementation "com.google.truth:truth:$truthVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidXTestExt"
}

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
project.afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can customize attributes of the publication here or in module's build.gradle file (if you save this as script and include it build.gradle file, then you can just replicate this whole block there only with changed fields).
                groupId = GROUP
                artifactId = ARTIFACT_ID
//                version = VERSION_NAME
            }
        }
        repositories {
            maven {
                url = uri('https://artifactory.svc.bird.co/artifactory/internal')
                credentials {
                    username = System.getenv('ARTIFACTORY_USER')
                    password = System.getenv('ARTIFACTORY_API_KEY')
                }
            }
        }
    }
}

//apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
apply from: rootProject.file('gradle/kotlin-static-analysis.gradle')
